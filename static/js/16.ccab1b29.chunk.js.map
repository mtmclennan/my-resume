{"version":3,"file":"static/js/16.ccab1b29.chunk.js","mappings":";unDAAA,IACEA,EAKEC,OALFD,eACAE,EAIED,OAJFC,eACAC,EAGEF,OAHFE,SACAC,EAEEH,OAFFG,eACAC,EACEJ,OADFI,yBAGIC,EAAyBL,OAAzBK,OAAQC,EAAiBN,OAAjBM,KAAMC,EAAWP,OAAXO,OACpB,EAA8C,qBAAZC,SAA2BA,QAAvDC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,UAERD,IACHA,EAAQ,SAAUE,EAAKC,EAAWC,GAChC,OAAOF,EAAIF,MAAMG,EAAWC,EAC7B,GAGER,IACHA,EAAS,SAAUS,GACjB,OAAOA,CACR,GAGER,IACHA,EAAO,SAAUQ,GACf,OAAOA,CACR,GAGEJ,IACHA,EAAY,SAAUK,EAAMF,GACfE,OAAAA,EAAAA,EAAX,EAAmBF,GACpB,GAGH,IAAMG,EAAeC,EAAQC,MAAMC,UAAUC,SAEvCC,EAAWJ,EAAQC,MAAMC,UAAUG,KACnCC,EAAYN,EAAQC,MAAMC,UAAUK,MAGpCC,EAAoBR,EAAQS,OAAOP,UAAUQ,aAC7CC,EAAiBX,EAAQS,OAAOP,UAAUU,UAC1CC,EAAcb,EAAQS,OAAOP,UAAUY,OACvCC,EAAgBf,EAAQS,OAAOP,UAAUc,SACzCC,EAAgBjB,EAAQS,OAAOP,UAAUgB,SACzCC,EAAanB,EAAQS,OAAOP,UAAUkB,MAEtCC,EAAarB,EAAQsB,OAAOpB,UAAUqB,MAEtCC,EAAkBC,EAAYC,WAE7B,SAAS1B,EAAQ2B,GACtB,OAAO,SAACC,GAAD,2BAAahC,EAAb,iCAAaA,EAAb,yBAAsBJ,EAAMmC,EAAMC,EAAShC,EAA3C,CACR,CAEM,SAAS6B,EAAYE,GACnB,6CAAI/B,EAAJ,yBAAIA,EAAJ,uBAAaH,EAAUkC,EAAM/B,EAA7B,CACR,CAGM,SAASiC,EAASC,EAAKC,EAAOC,GACnCA,EAAoBA,GAAwCxB,EACxDxB,GAIFA,EAAe8C,EAAK,MAIfG,IADP,IAAIA,EAAIF,EAAMG,OACPD,KAAK,CACV,IAAIE,EAAUJ,EAAME,GACpB,GAAuB,kBAAZE,EAAsB,CAC/B,IAAMC,EAAYJ,EAAkBG,GAChCC,IAAcD,IAEXlD,EAAS8C,KACZA,EAAME,GAAKG,GAGbD,EAAUC,EAEb,CAEDN,EAAIK,IAAW,CAChB,CAED,OAAOL,CACR,CAGM,SAASO,EAAMC,GACpB,IAEIC,EAFEC,EAAYlD,EAAO,MAGpBiD,IAAAA,KAAYD,GACmC,IAA9C9C,EAAMV,EAAgBwD,EAAQ,CAACC,MACjCC,EAAUD,GAAYD,EAAOC,IAIjC,OAAOC,CACR,CAMD,SAASC,EAAaH,EAAQI,GACrBJ,KAAW,OAAXA,GAAiB,CACtB,IAAMK,EAAOxD,EAAyBmD,EAAQI,GAC9C,GAAIC,EAAM,CACJA,GAAAA,EAAKC,IACP,OAAO5C,EAAQ2C,EAAKC,KAGtB,GAA0B,oBAAfD,EAAKE,MACd,OAAO7C,EAAQ2C,EAAKE,MAEvB,CAEDP,EAASpD,EAAeoD,EACzB,CAEQQ,SAAAA,EAAcX,GAErB,OADAY,QAAQC,KAAK,qBAAsBb,GAC5B,IACR,CAED,OAAOW,CACR,CCjIM,IAAMG,EAAO7D,EAAO,CACzB,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,MACA,MACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,YACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,UACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,QAIW8D,EAAM9D,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,UAGW+D,EAAa/D,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,iBAOWgE,EAAgBhE,EAAO,CAClC,UACA,gBACA,SACA,UACA,eACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,QAGWiE,EAASjE,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,eAKWkE,EAAmBlE,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,SAGWmE,EAAOnE,EAAO,CAAC,UCpRf6D,EAAO7D,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,SAGW8D,EAAM9D,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,eAGWiE,EAASjE,EAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,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O6oB,GAC9B,OAAOhrB,EAAQmiB,OACmB,MAA/B4I,EAAKE,WAAW,GAAK,OACpBF,EAAKE,WAAW,GAChB,MACA,MACFD,EAAIC,WAAW9oB,EAAQ,GACvBnC,EAEJ,IArBKvR,QAEC,6DACAo8B,GAyBN,SAASA,EAAMK,EAAW/oB,EAAO6oB,GAC/B,OAAOhrB,EAAQmiB,OACb+I,EAAUD,WAAW,GACrBD,EAAIC,WAAW9oB,EAAQ,GACvBnC,EAEJ,CACF,CCpEO,ICSHN,EDTSyrB,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QE1GWC,EAAyB,CACpCC,KAAM,OACNC,MAAO,OACPC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,IAAK,OACLtrB,KAAM,OACNurB,KAAM,OACNC,MAAO,OACPC,IAAK,OACLC,IAAK,OACLC,IAAK,OACLC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAA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","sources":["../node_modules/dompurify/src/utils.js","../node_modules/dompurify/src/tags.js","../node_modules/dompurify/src/attrs.js","../node_modules/dompurify/src/regexp.js","../node_modules/dompurify/src/purify.js","../node_modules/extend/index.js","../node_modules/is-buffer/index.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/html-void-elements/index.js","../node_modules/zwitch/index.js","../node_modules/stringify-entities/lib/core.js","../node_modules/character-entities-legacy/index.js","../node_modules/stringify-entities/lib/util/to-named.js","../node_modules/character-entities-html4/index.js","../node_modules/stringify-entities/lib/constant/dangerous.js","../node_modules/stringify-entities/lib/util/format-smart.js","../node_modules/stringify-entities/lib/util/to-hexadecimal.js","../node_modules/stringify-entities/lib/util/to-decimal.js","../node_modules/stringify-entities/lib/index.js","../node_modules/ccount/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/property-information/lib/find.js","../node_modules/space-separated-tokens/index.js","../node_modules/hast-util-whitespace/index.js","../node_modules/hast-util-to-html/lib/omission/util/siblings.js","../node_modules/hast-util-to-html/lib/omission/omission.js","../node_modules/hast-util-to-html/lib/omission/closing.js","../node_modules/hast-util-to-html/lib/omission/opening.js","../node_modules/hast-util-to-html/lib/handle/element.js","../node_modules/hast-util-to-html/lib/handle/text.js","../node_modules/hast-util-to-html/lib/handle/index.js","../node_modules/hast-util-to-html/lib/handle/comment.js","../node_modules/hast-util-to-html/lib/handle/doctype.js","../node_modules/hast-util-to-html/lib/handle/raw.js","../node_modules/hast-util-to-html/lib/handle/root.js","../node_modules/hast-util-to-html/lib/index.js","../node_modules/rehype-stringify/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/unist-builder/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/index.js","../node_modules/unist-util-stringify-position/lib/index.js"],"sourcesContent":["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property]) === true) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent | null | undefined} parent\n   * @param {number | null | undefined} index\n   * @param {boolean | null | undefined} [includeWhitespace=false]\n   * @returns {Content}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : []\n    let offset = (index || 0) + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n// eslint-disable-next-line complexity\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'menuitem' ||\n        next.tagName === 'hr' ||\n        next.tagName === 'menu'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'col'\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'tr'\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').PropertyValue} PropertyValue\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {opening} from '../omission/opening.js'\nimport {closing} from '../omission/closing.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'name' | 'unquoted' | 'single' | 'double', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\n// eslint-disable-next-line complexity\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== undefined && props[key] !== null) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: constants.unquoted[x][y],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Text | Raw} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Node, index: number | undefined, parent: Parent | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node) {\n  // @ts-expect-error: `type` is defined.\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @typedef {import('../types.js').Comment} Comment\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').DocType} DocType\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {DocType} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @typedef {import('../types.js').Root} Root\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Content} Content\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {handle} from './handle/index.js'\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Node | Array<Content>} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {string}\n *   Serialized HTML.\n */\n// eslint-disable-next-line complexity\nexport function toHtml(tree, options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || options_.entities || {},\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Node} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Root['children'][number]} Node\n * @typedef {import('hast-util-to-html').Options} Options\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/** @type {import('unified').Plugin<[Options?]|Array<void>, Node, string>} */\nexport default function rehypeStringify(config) {\n  const processorSettings = /** @type {Options} */ (this.data('settings'))\n  const settings = Object.assign({}, processorSettings, config)\n\n  Object.assign(this, {Compiler: compiler})\n\n  /**\n   * @type {import('unified').CompilerFunction<Node, string>}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n */\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const includeImageAlt = (options || {}).includeImageAlt\n  return one(\n    value,\n    typeof includeImageAlt === 'boolean' ? includeImageAlt : true\n  )\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt) {\n  return (\n    (node(value) &&\n      (('value' in value && value.value) ||\n        (includeImageAlt && 'alt' in value && value.alt) ||\n        ('children' in value && all(value.children, includeImageAlt)))) ||\n    (Array.isArray(value) && all(value, includeImageAlt)) ||\n    ''\n  )\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","/**\n * @typedef {import('unist').Node} Node\n */\n\n/**\n * @typedef {Array<Node> | string} ChildrenOrValue\n *   List to use as `children` or value to use as `value`.\n *\n * @typedef {Record<string, unknown>} Props\n *   Other fields to add to the node.\n */\n\n/**\n * Build a node.\n *\n * @param type\n *   Node type.\n * @param props\n *   Fields assigned to node.\n * @param value\n *   Children of node or value of `node` (cast to string).\n * @returns\n *   Built node.\n */\nexport const u =\n  /**\n   * @type {(\n   *   (<T extends string>(type: T) => {type: T}) &\n   *   (<T extends string, P extends Props>(type: T, props: P) => {type: T} & P) &\n   *   (<T extends string>(type: T, value: string) => {type: T, value: string}) &\n   *   (<T extends string, P extends Props>(type: T, props: P, value: string) => {type: T, value: string} & P) &\n   *   (<T extends string, C extends Array<Node>>(type: T, children: C) => {type: T, children: C}) &\n   *   (<T extends string, P extends Props, C extends Array<Node>>(type: T, props: P, children: C) => {type: T, children: C} & P)\n   * )}\n   */\n  (\n    /**\n     * @param {string} type\n     * @param {Props | ChildrenOrValue | null | undefined} [props]\n     * @param {ChildrenOrValue | null | undefined} [value]\n     * @returns {Node}\n     */\n    function (type, props, value) {\n      /** @type {Node} */\n      const node = {type: String(type)}\n\n      if (\n        (value === undefined || value === null) &&\n        (typeof props === 'string' || Array.isArray(props))\n      ) {\n        value = props\n      } else {\n        Object.assign(node, props)\n      }\n\n      if (Array.isArray(value)) {\n        // @ts-expect-error: create a parent.\n        node.children = value\n      } else if (value !== undefined && value !== null) {\n        // @ts-expect-error: create a literal.\n        node.value = String(value)\n      }\n\n      return node\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} MdastNode\n * @typedef {Extract<MdastNode, import('mdast').Parent>} MdastParent\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n *\n * @param {H} h\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} node\n * @param {MdastParent | null} parent\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @template {MdastNode} Node\n * @param {H} h\n * @param {Node} node\n * @returns {Node}\n */\nfunction returnNode(h, node) {\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {H} h\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').H} H\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').H} H\n\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').H} H\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @param {H} h\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @param {H} h\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @param {H} h\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @param {H} h\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n * @typedef {import('mdast').Parent} Parent\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {List} node\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @param {H} h\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').H} H\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {ThematicBreak} [node]\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n"],"names":["hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","Reflect","apply","construct","fun","thisValue","args","x","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","addToSet","set","array","transformCaseFunc","l","length","element","lcElement","clone","object","property","newObject","lookupGetter","prop","desc","get","value","fallbackValue","console","warn","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","createDOMPurify","DOMPurify","root","version","VERSION","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","PARSER_MEDIA_TYPE","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","_typeof","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","outerHTML","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","i","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","undefined","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toStaticHTML","appendChild","firstChild","nodeIterator","shadowroot","serializedHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","hasOwn","toStr","defineProperty","gOPD","isArray","arr","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","newValue","getProperty","module","exports","extend","src","copy","copyIsArray","arguments","deep","isBuffer","_defineProperty","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","code","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","Schema","normal","space","this","merge","definitions","index","assign","normalize","Info","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","types","DefinedInfo","mask","mark","check","values","own","definition","properties","info","transform","includes","xlink","slice","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","start","step","style","tabIndex","title","translate","type","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","end","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","htmlVoidElements","core","subset","groups","join","charactersToExpression","basic","escapeOnly","pair","all","charCodeAt","character","characterEntitiesLegacy","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","dangerous","characters","formatSmart","next","named","numeric","omit","toUpperCase","toHexadecimal","omitOptionalSemicolons","useNamedReferences","useShortestReferences","toNamed","decimal","toDecimal","stringifyEntities","ccount","source","count","stringify","settings","padRight","padLeft","valid","dash","kebab","$0","camelcase","charAt","whitespace","thing","siblingAfter","siblings","siblingBefore","includeWhitespace","children","omission","handlers","closing","head","headOrColgroupOrCaption","p","li","dt","dd","rt","rubyElement","rp","optgroup","option","menuitem","colgroup","caption","thead","tfoot","tr","td","cells","th","opening","seen","child","previous","constants","split","unquoted","single","double","serializeAttribute","state","schema","Type","rest","dashes","find","allowParseErrors","allowDangerousCharacters","quote","Number","isNaN","characterReferences","commas","spaces","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","alternative","handle","one","fn","invalid","unknown","parameters","zwitch","Error","comment","_1","_2","bogusComments","_3","upperDoctype","tightDoctype","last","omitOptionalTags","selfClosing","closeEmptyElements","voids","parts","attrs","props","tightAttributes","serializeAttributes","closeSelfClosing","tightSelfClosing","raw","allowDangerousHtml","rehypeStringify","config","processorSettings","Compiler","tree","options_","entities","toHtml","includeImageAlt","splice","items","chunkStart","unshift","combineExtensions","extensions","syntaxExtension","extension","left","right","constructs","existing","before","add","factorySpace","effects","ok","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","self","stack","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","point","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","line","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","entry","nok","disable","null","blankLine","partial","subtokenize","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","column","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","titleConstruct","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","decodeNamedCharacterReference","characterReference","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decode","$1","$2","hex","fromMarkdown","encoding","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","setData","getData","listStack","prepareList","defaultOnError","position","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","stringifyPosition","url","depth","referenceType","ancestor","decodeString","ordered","spread","compiler","postprocess","defaultConstructs","concat","parse","atCarriageReturn","endPosition","lastIndex","exec","Math","ceil","preprocess","combined","Parser","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","u","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","visitParents","visitor","reverse","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","h","augment","passThrough","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","revert","subtype","contents","listItemLoose","trimLine","codePointAt","blockquote","break","delete","footnote","footnoteById","no","imageReference","inlineCode","linkReference","listLoose","wrapped","row","out","cellIndex","cell","lines","trimLines","toml","ignore","yaml","footnoteDefinition","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","tailTail","dataFootnotes","JSON","footer","destination","file","run","error","bridge","mutate","bail","Symbol","toStringTag","iterator","middleware","callback","fnExpectsCallback","exception","Promise","then","output","VFileMessage","reason","place","message","fatal","ruleId","actual","expected","note","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","proc","cwd","isUrl","fileURLOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","messages","history","stored","assertNonEmpty","assertPart","stem","unified","frozen","transformers","fns","pipeline","middlewareIndex","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","attacher","transformer","addPlugin","addList","addPreset","plugin","plugins","isPlainObj","vfile","assertParser","newable","assertCompiler","assertNode","executor","reject","runSync","complete","assertDone","process","processSync","asyncName","looksLikeAVFile","pos"],"sourceRoot":""}